// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-10-12 14:03:13.930897 +0800 CST m=+0.108163561

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/account/{address}/rewards": {
            "get": {
                "description": "get list of notice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "list",
                "parameters": [
                    {
                        "enum": [
                            "unpublished",
                            "published",
                            "expired"
                        ],
                        "type": "string",
                        "description": "notice status",
                        "name": "account",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/vo.AccountRewardsVo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utils.CoinAsStr": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "denom": {
                    "type": "string"
                }
            }
        },
        "utils.CoinsAsStr": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string"
                    },
                    "denom": {
                        "type": "string"
                    }
                }
            }
        },
        "vo.AccountRewardsVo": {
            "type": "object",
            "properties": {
                "commission_rewards": {
                    "type": "object",
                    "$ref": "#/definitions/utils.CoinsAsStr"
                },
                "delagations_rewards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vo.DelagationsRewards"
                    }
                },
                "total_rewards": {
                    "type": "object",
                    "$ref": "#/definitions/utils.CoinsAsStr"
                }
            }
        },
        "vo.DelagationsRewards": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "object",
                    "$ref": "#/definitions/utils.CoinsAsStr"
                },
                "moniker": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
